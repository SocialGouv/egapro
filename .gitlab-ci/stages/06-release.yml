---
Make a new release and deploy to preprod environment:
  stage: Release
  image: node:${NODE_VERSION}
  variables:
    GIT_AUTHOR_EMAIL: 45039513+SocialGroovyBot@users.noreply.github.com
    GIT_AUTHOR_NAME: Social Groovy Bot
    GIT_COMMITTER_EMAIL: ${GIT_AUTHOR_EMAIL}
    GIT_COMMITTER_NAME: ${GIT_AUTHOR_NAME}
    GIT_DEPTH: 4242
  cache:
    key: "${CI_JOB_NAME}-${CI_COMMIT_REF_SLUG}"
    paths:
      - ${CI_PROJECT_DIR}/.yarn
  before_script:
    - git checkout ${CI_COMMIT_REF_NAME}
    - git config user.name "Social Groovy Bot"
    - git config user.email "45039513+SocialGroovyBot@users.noreply.github.com"
    - git remote set-url origin https://${GITHUB_TOKEN}@github.com/${CI_PROJECT_PATH}.git
  script:
    - yarn config set cache-folder ${CI_PROJECT_DIR}/.yarn
    - yarn --frozen-lockfile
    - GH_TOKEN=${GITHUB_TOKEN} yarn lerna version ${LERNA_ARGS:="--force-publish --yes"}
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /^chore\(release.*/
  only:
    - master
  when: manual

###########################################
###            IMPORT-EXPORT            ###
###########################################

Import Solen to consolidated export:
  stage: Release
  image: registry.gitlab.factory.social.gouv.fr/socialgouv/docker/kubectl:0.29.0
  dependencies: []
  when: manual
  #TODO: uncomment the following "only" when it's been tested so it only deploys on preprod
  # only:
  #   refs:
  #     - tags
  environment:
    name: ${DEV_ENVIRONMENT_NAME}
  except:
    variables:
      - $PRODUCTION
  script:
    - kubectl delete job import-export-job -n ${K8S_NAMESPACE} || true;
    - envsubst < .k8s/import-export/import-export-job.yml > .k8s/import-export/import-export-job-${PROJECT}.yml
    - kubectl apply -f .k8s/import-export/import-export-job-${PROJECT}.yml -n ${K8S_NAMESPACE}
    - kubectl wait --for=condition=complete job/import-export-job --timeout=180000s -n ${K8S_NAMESPACE}

###########################################
###            DATA-MIGRATION           ###
###########################################

Migrate the data to the latest version:
  stage: Release
  image: registry.gitlab.factory.social.gouv.fr/socialgouv/docker/kubectl:0.29.0
  dependencies: []
  when: manual
  environment:
    name: ${DEV_ENVIRONMENT_NAME}
  except:
    variables:
      - $PRODUCTION
  script:
    - kubectl delete job migrate-data-job -n ${K8S_NAMESPACE} || true;
    - envsubst < .k8s/migrate-data/migrate-data-job.yml > .k8s/migrate-data/migrate-data-job-${PROJECT}.yml
    - kubectl apply -f .k8s/migrate-data/migrate-data-job-${PROJECT}.yml -n ${K8S_NAMESPACE}
    - kubectl wait --for=condition=complete job/migrate-data-job --timeout=180000s -n ${K8S_NAMESPACE}
