---
version: "3.2"

services:
  egapro-frontend:
    build:
      context: .
      dockerfile: ./packages/app/Dockerfile
    env_file: .env
    environment:
      REACT_APP_API_URL: http://egapro-api:4000
    depends_on:
      - egapro-api
    ports:
      - 8080:9000
    links:
      - egapro-api

  egapro-api:
    build:
      context: .
      dockerfile: ./packages/api/Dockerfile
    env_file: .env
    environment:
      KINTO_SERVER: kinto-server
    depends_on:
      - init-kinto
    links:
      - kinto-server

  db:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - egapro-pgdata:/var/lib/postgresql/data

  cache:
    image: library/memcached

  kinto-server:
    image: kinto/kinto-server
    links:
      - db
      - cache
    ports:
      - "8888:8888"
    environment:
      KINTO_CACHE_BACKEND: kinto.core.cache.memcached
      KINTO_CACHE_HOSTS: cache:11211 cache:11212
      KINTO_STORAGE_BACKEND: kinto.core.storage.postgresql
      KINTO_STORAGE_URL: postgresql://postgres:postgres@db/postgres
      KINTO_PERMISSION_BACKEND: kinto.core.permission.postgresql
      KINTO_PERMISSION_URL: postgresql://postgres:postgres@db/postgres
      KINTO_EXPERIMENTAL_COLLECTION_SCHEMA_VALIDATION: 1
      KINTO_BATCH_MAX_REQUESTS: 10000



  init-kinto:
    build:
      context: ./packages/kinto/
    env_file: .env
    links:
      - kinto-server
      - db
      - cache
    depends_on:
      - db
      - kinto-server
      - cache

volumes:
  egapro-pgdata:
