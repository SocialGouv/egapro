app:
  ~chart: app
  ~needs: [build-app]
  imagePackage: app
  probesPath: /healthz
  containerPort: 3000
  host: "{{ .Values.global.host }}"
  ingress:
    path: /
    annotations:
      nginx.ingress.kubernetes.io/configuration-snippet: |
        more_set_headers "Content-Security-Policy: default-src 'self'; connect-src 'self' https://*.gouv.fr; font-src 'self'; media-src 'self' https://*.gouv.fr; img-src 'self' data: https://*.gouv.fr https://www.googletagmanager.co; prefetch-src 'self' https://*.gouv.fr; script-src 'self' https://www.googletagmanager.com https://*.gouv.fr 'unsafe-inline' 'unsafe-eval'; frame-src 'self' https://*.gouv.fr; style-src 'self' 'unsafe-inline'";
        more_set_headers "X-Frame-Options: deny";
        more_set_headers "X-XSS-Protection: 1; mode=block";
        more_set_headers "X-Content-Type-Options: nosniff";
  certSecretName: api-crt
  envFrom:
    - secretRef:
        name: "{{ .Values.global.pgSecretName }}"
    - secretRef:
        name: "staff"
    - secretRef:
        name: "egapro-secret"
  vars:
    POSTGRES_HOST: "$(PGHOST)"
    POSTGRES_DB: "$(PGDATABASE)"
    POSTGRES_PORT: "$(PGPORT)"
    POSTGRES_USER: "$(PGUSER)"
    POSTGRES_PASSWORD: "$(PGPASSWORD)"
    POSTGRES_SSLMODE: "$(PGSSLMODE)"
    SECURITY_JWT_SECRET: "$(EGAPRO_SECRET)"
    SENTRY_DSN: "https://084bf19c0e1141ddadbc1f7b86d2eb57@sentry.fabrique.social.gouv.fr/22"

storybook:
  ~chart: app
  ~needs: [build-storybook]
  imagePackage: storybook
  probesPath: /
  containerPort: 8080
  host: "{{ .Values.global.host }}"
  .ingress.path: /storybook(/|$)(.*)
  .ingress.rewriteTarget: /$2
  certSecretName: api-crt

declaration:
  ~chart: app
  ~needs: [build-declaration]
  imagePackage: declaration
  probesPath: /index.html
  containerPort: 8080
  host: "{{ .Values.global.host }}"
  ingress:
    path: /index-egapro/declaration(/|$)(.*)
    rewriteTarget: /$2
    annotations:
      nginx.ingress.kubernetes.io/configuration-snippet: |
        more_set_headers "Content-Security-Policy: default-src 'self'; connect-src 'self' https://*.gouv.fr; font-src 'self'; media-src 'self' https://*.gouv.fr; img-src 'self' data: https://*.gouv.fr https://www.googletagmanager.co; prefetch-src 'self' https://*.gouv.fr; script-src 'self' https://www.googletagmanager.com https://*.gouv.fr 'unsafe-inline' 'unsafe-eval'; frame-src 'self' https://*.gouv.fr; style-src 'self' 'unsafe-inline'";
        more_set_headers "X-Frame-Options: deny";
        more_set_headers "X-XSS-Protection: 1; mode=block";
        more_set_headers "X-Content-Type-Options: nosniff";
  certSecretName: api-crt

simulateur:
  ~chart: app
  ~needs: [build-simulateur]
  imagePackage: simulateur
  probesPath: /index.html
  containerPort: 8080
  host: "{{ .Values.global.host }}"
  ingress:
    path: /index-egapro(/|$)(.*)
    rewriteTarget: /$2
    annotations:
      nginx.ingress.kubernetes.io/configuration-snippet: |
        more_set_headers "Content-Security-Policy: default-src 'self'; connect-src 'self' https://*.gouv.fr; font-src 'self'; media-src 'self' https://*.gouv.fr; img-src 'self' data: https://*.gouv.fr https://www.googletagmanager.co; prefetch-src 'self' https://*.gouv.fr; script-src 'self' https://www.googletagmanager.com https://*.gouv.fr 'unsafe-inline'  'unsafe-eval'; frame-src 'self' https://*.gouv.fr; style-src 'self' 'unsafe-inline'";
        more_set_headers "X-Frame-Options: deny";
        more_set_headers "X-XSS-Protection: 1; mode=block";
        more_set_headers "X-Content-Type-Options: nosniff";
  certSecretName: api-crt

api:
  ~chart: app
  ~needs: [build-api]
  imagePackage: api
  probesPath: /healthz
  containerPort: 2626
  host: "{{ .Values.global.host }}"
  .ingress.path: /api(/|$)(.*)
  .ingress.rewriteTarget: /$2
  certSecretName: api-crt
  envFrom:
    - secretRef:
        name: "{{ .Values.global.pgSecretName }}"
    - secretRef:
        name: "staff"
    - secretRef:
        name: "egapro-secret"
  vars:
    EGAPRO_DBHOST: "$(PGHOST)"
    EGAPRO_DBNAME: "$(PGDATABASE)"
    EGAPRO_DBPORT: "$(PGPORT)"
    EGAPRO_DBUSER: "$(PGUSER)"
    EGAPRO_DBPASS: "$(PGPASSWORD)"
    EGAPRO_DBSSL: "$(PGSSLMODE)"
    EGAPRO_SENTRY_DSN: "https://084bf19c0e1141ddadbc1f7b86d2eb57@sentry.fabrique.social.gouv.fr/22"
  # addVolumes:
  #   - files

files:
  ~chart: app
  image: ghcr.io/socialgouv/docker/nginx:7.0.1
  containerPort: 8080
  probesPort: 8080
  host: "{{ .Values.global.host }}"
  .ingress.enabled: false
  volumes:
    - name: files
      persistentVolumeClaim:
        claimName: files
  volumeMounts:
    - name: files
      mountPath: /usr/share/nginx/html

project:
  apiJobs:
    - name: export-public-data
      command: egapro export-public-data /mnt/files/index-egalite-fh.csv
    - name: dump-dgt
      command: egapro dump-dgt /mnt/files/dgt.xlsx
    - name: dump-dgt-representation
      command: egapro dump-dgt-representation /mnt/files/dgt-representation.xlsx
    - name: full
      command: egapro full /mnt/files/full.ndjson
    - name: export-indexes
      command: egapro export-indexes /mnt/files/indexes.csv
    - name: export-representation
      command: egapro export-representation /mnt/files/dgt-export-representation.xlsx
  whitelist:
    # DigDash dev
    - "94.23.250.213"
    # DigDash prod 1 and 2
    - "37.187.27.197"
    - "37.187.137.149"
    # Invenis prod
    - "217.182.142.112"
  files:
    public:
      - index-egalite-fh.csv
      - dgt-export-representation.xlsx
    restricted:
      - dgt.xlsx
      - dgt-representation.xlsx
      - full.ndjson
      - indexes.csv

jobs:
  ~chart: jobs
  runs:
    build-app:
      use: SocialGouv/kontinuous/plugins/contrib/jobs/build
      memoryLimit: 14Gi
      memoryRequest: 2Gi
      with:
        imagePackage: app
        dockerfile: packages/app/Dockerfile
        buildArgs:
          NEXT_PUBLIC_API_URL: "https://{{ .Values.global.host }}/api"
          NEXT_PUBLIC_API_V2_URL: "https://{{ .Values.global.host }}/apiv2"
          NEXT_PUBLIC_GITHUB_SHA: "{{ $.Values.global.sha }}"

    build-storybook:
      use: SocialGouv/kontinuous/plugins/contrib/jobs/build
      memoryLimit: 8Gi
      memoryRequest: 2Gi
      with:
        imagePackage: storybook
        dockerfile: packages/app/.storybook/Dockerfile

    build-api:
      use: SocialGouv/kontinuous/plugins/contrib/jobs/build
      with:
        imagePackage: api
        context: packages/api

    build-declaration:
      use: SocialGouv/kontinuous/plugins/contrib/jobs/build
      with:
        imagePackage: declaration
        context: packages/declaration
        buildArgs:
          BASE_URL: "https://{{ .Values.global.host }}/index-egapro/declaration"
          EGAPRO_API_URL: "https://{{ .Values.global.host }}/api"
          EGAPRO_SIMU_URL: "https://{{ .Values.global.host }}/index-egapro"
          GITHUB_SHA: "{{ $.Values.global.sha }}"

    build-simulateur:
      use: SocialGouv/kontinuous/plugins/contrib/jobs/build
      memoryLimit: 10Gi
      memoryRequest: 2Gi
      with:
        imagePackage: simulateur
        dockerfile: packages/simulateur/Dockerfile
        buildArgs:
          REACT_APP_EGAPRO_API_URL: "https://{{ .Values.global.host }}/api"
          REACT_APP_DECLARATION_URL: "https://{{ .Values.global.host }}/index-egapro/declaration"
          REACT_APP_VERSION: "{{ .Values.global.gitBranch }}"
          PUBLIC_URL: "/index-egapro"

deactivate:
  jobs-deactivate:
    runs:
      deactivate:
        with:
          db: true
          pgAdminSecretRefName: azure-pg-admin-user
