---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: kinto${SUFFIX_BRANCH_NAME}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kinto${SUFFIX_BRANCH_NAME}
  template:
    metadata:
      labels:
        app: kinto${SUFFIX_BRANCH_NAME}
        branch: egapro${SUFFIX_BRANCH_NAME}
    spec:
      containers:
      - name: kinto
        image: kinto/kinto-server:13.1.1
        imagePullPolicy: "IfNotPresent"
        ports:
          - containerPort: ${PORT}
        resources:
          requests:
            cpu: ${KINTO_RESOURCE_CPU_REQUEST}
            memory: ${KINTO_RESOURCE_MEMORY_REQUEST}
          limits:
            cpu: ${KINTO_RESOURCE_CPU_LIMIT}
            memory: ${KINTO_RESOURCE_MEMORY_LIMIT}
        env:
          - name: KINTO_CACHE_BACKEND
            value: "kinto.core.cache.memcached"
          - name: KINTO_CACHE_HOSTS
            value: "egapro${SUFFIX_BRANCH_NAME}-memcached:11211 egapro${SUFFIX_BRANCH_NAME}-memcached:11211"
          - name: KINTO_STORAGE_BACKEND
            value: "kinto.core.storage.postgresql"
          - name: KINTO_STORAGE_URL
            value: "postgresql://${POSTGRES_API_USER}:${POSTGRES_API_USER_PASSWORD}@egapro${SUFFIX_BRANCH_NAME}-pg-postgresql/postgres"
          - name: KINTO_PERMISSION_BACKEND
            value: "kinto.core.permission.postgresql"
          - name: KINTO_PERMISSION_URL
            value: "postgresql://${POSTGRES_API_USER}:${POSTGRES_API_USER_PASSWORD}@egapro${SUFFIX_BRANCH_NAME}-pg-postgresql/postgres"
      initContainers:
      - name: wait-for-postgres
        image: postgres:11-alpine
        imagePullPolicy: Always
        resources:
          requests:
            cpu: 5m
            memory: 16Mi
          limits:
            cpu: 20m
            memory: 32Mi
        command:
        - sh
        - -c
        - |
          retry=120; # 5s * (12 * 10) = 10min
          while ! pg_isready -h egapro${SUFFIX_BRANCH_NAME}-pg-postgresql > /dev/null 2> /dev/null && [[ $(( retry-- )) -gt 0 ]];
            do
              echo "Waiting for Postgres to go Green ($(( retry )))" ; sleep 5s ; done ;
          echo Ready;
